"use strict";

var React = require('react');
var ReactDOMServer = require('react-dom/server');
var FormSummary = require('../react-components/components/FormSummary');
function renderFormSummary(data, price) {
  var componentContent = ReactDOMServer.renderToStaticMarkup(React.createElement(FormSummary, {
    data: data,
    price: price
  }));

  // Embed S3 URLs into a hidden div
  var s3UrlsDiv = data.referenceImages.map(function (file) {
    return "<div class=\"s3-url\" data-type=\"referenceImage\">".concat(file.s3Url, "</div>");
  }).concat("<div class=\"s3-url\" data-type=\"logo\">".concat(data.logo.s3Url, "</div>")).join('');
  return "\n        <!DOCTYPE html>\n        <html lang=\"en\">\n            <head>\n                <meta charset=\"UTF-8\">\n                <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n                <title>Form Summary</title>\n                <link rel=\"stylesheet\" href=\"../formStyles.css\">\n                <!-- Include JSZip library -->\n                <script src=\"https://cdnjs.cloudflare.com/ajax/libs/jszip/3.5.0/jszip.min.js\"></script>\n            </head>\n            <body>\n                ".concat(componentContent, "\n                \n                <!-- Hidden div to store S3 URLs -->\n                <div style=\"display:none;\" id=\"s3Urls\">").concat(s3UrlsDiv, "</div>\n\n                <!-- Download Button -->\n                <button id=\"downloadButton\">Download All Files</button>\n\n                <script>\n                document.getElementById('downloadButton').addEventListener('click', async function() {\n                    const urls = Array.from(document.querySelectorAll('.s3-url')).map(div => ({\n                        url: div.textContent,\n                        type: div.getAttribute('data-type')\n                    }));\n                    console.log(urls);\n                \n                    // Create a new JSZip instance\n                    const zip = new JSZip();\n                \n                    // Fetch each file and add to zip\n                    for (let { url, type } of urls) {\n                        try {\n                            const response = await fetch(url);\n                            const blob = await response.blob();\n                \n                            // Determine directory based on type\n                            let directory = \"\";\n                            if (type === 'referenceImage') {\n                                directory = \"referenceImages/\";\n                            } else if (type === 'logo') {\n                                directory = \"logos/\";\n                            }\n                \n                            zip.file(directory + url.split('/').pop(), blob);\n                        } catch (error) {\n                            console.error(`Error fetching ${url}:`, error);\n                        }\n                    }\n                \n                    // Generate zip and trigger download\n                    try {\n                        const content = await zip.generateAsync({ type: \"blob\" });\n                        const url = window.URL.createObjectURL(content);\n                        const a = document.createElement('a');\n                        a.href = url;\n                        a.download = 'files.zip';\n                        document.body.appendChild(a);\n                        a.click();\n                        a.remove();\n                    } catch (error) {\n                        console.error(\"Error generating zip:\", error);\n                    }\n                });\n                </script>\n            </body>\n        </html>\n    ");
}
module.exports = renderFormSummary;